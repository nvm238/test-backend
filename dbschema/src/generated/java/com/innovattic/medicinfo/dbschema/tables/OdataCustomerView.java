/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables;


import com.innovattic.medicinfo.dbschema.Public;
import com.innovattic.medicinfo.dbschema.tables.records.OdataCustomerViewRecord;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Row17;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OdataCustomerView extends TableImpl<OdataCustomerViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.odata_customer_view</code>
     */
    public static final OdataCustomerView ODATA_CUSTOMER_VIEW = new OdataCustomerView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OdataCustomerViewRecord> getRecordType() {
        return OdataCustomerViewRecord.class;
    }

    /**
     * The column <code>public.odata_customer_view.conversation_id</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> CONVERSATION_ID = createField(DSL.name("conversation_id"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.odata_customer_view.customer_id</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> CUSTOMER_ID = createField(DSL.name("customer_id"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>public.odata_customer_view.registered_at</code>.
     */
    public final TableField<OdataCustomerViewRecord, LocalDateTime> REGISTERED_AT = createField(DSL.name("registered_at"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.odata_customer_view.age</code>.
     */
    public final TableField<OdataCustomerViewRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.odata_customer_view.gender</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> GENDER = createField(DSL.name("gender"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.is_insured</code>.
     */
    public final TableField<OdataCustomerViewRecord, Boolean> IS_INSURED = createField(DSL.name("is_insured"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.odata_customer_view.privacy_version</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> PRIVACY_VERSION = createField(DSL.name("privacy_version"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.privacy_version_accepted_at</code>.
     */
    public final TableField<OdataCustomerViewRecord, LocalDateTime> PRIVACY_VERSION_ACCEPTED_AT = createField(DSL.name("privacy_version_accepted_at"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.odata_customer_view.label_code</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> LABEL_CODE = createField(DSL.name("label_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.entry_type</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> ENTRY_TYPE = createField(DSL.name("entry_type"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.general_practice</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> GENERAL_PRACTICE = createField(DSL.name("general_practice"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.general_practice_agb_code</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> GENERAL_PRACTICE_AGB_CODE = createField(DSL.name("general_practice_agb_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.general_practice_center</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> GENERAL_PRACTICE_CENTER = createField(DSL.name("general_practice_center"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.general_practice_center_agb_code</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> GENERAL_PRACTICE_CENTER_AGB_CODE = createField(DSL.name("general_practice_center_agb_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.holiday_destination</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> HOLIDAY_DESTINATION = createField(DSL.name("holiday_destination"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.shelter_location_id</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> SHELTER_LOCATION_ID = createField(DSL.name("shelter_location_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.odata_customer_view.shelter_location_name</code>.
     */
    public final TableField<OdataCustomerViewRecord, String> SHELTER_LOCATION_NAME = createField(DSL.name("shelter_location_name"), SQLDataType.CLOB, this, "");

    private OdataCustomerView(Name alias, Table<OdataCustomerViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private OdataCustomerView(Name alias, Table<OdataCustomerViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"odata_customer_view\" as  SELECT (conversation.public_id)::character varying(50) AS conversation_id,\n    (\"user\".public_id)::character varying(50) AS customer_id,\n    \"user\".created AS registered_at,\n    \"user\".age,\n    \"user\".gender,\n    \"user\".is_insured,\n    latest_acc_policy.version AS privacy_version,\n    latest_acc_policy.accepted_at AS privacy_version_accepted_at,\n    label.code AS label_code,\n    \"user\".entry_type,\n    \"user\".general_practice,\n    \"user\".general_practice_agb_code,\n    \"user\".general_practice_center,\n    \"user\".general_practice_center_agb_code,\n    \"user\".holiday_destination,\n    \"user\".shelter_location_id,\n    \"user\".shelter_location_name\n   FROM (((\"user\"\n     LEFT JOIN label ON ((\"user\".label_id = label.id)))\n     LEFT JOIN conversation ON ((\"user\".id = conversation.customer_id)))\n     LEFT JOIN ( SELECT privacy_statement.user_id,\n            privacy_statement.version,\n            privacy_statement.accepted_at,\n            row_number() OVER (PARTITION BY privacy_statement.user_id ORDER BY privacy_statement.accepted_at DESC) AS rank\n           FROM privacy_statement) latest_acc_policy ON (((\"user\".id = latest_acc_policy.user_id) AND (latest_acc_policy.rank = 1))))\n  WHERE (\"user\".role = 'customer'::text);"));
    }

    /**
     * Create an aliased <code>public.odata_customer_view</code> table reference
     */
    public OdataCustomerView(String alias) {
        this(DSL.name(alias), ODATA_CUSTOMER_VIEW);
    }

    /**
     * Create an aliased <code>public.odata_customer_view</code> table reference
     */
    public OdataCustomerView(Name alias) {
        this(alias, ODATA_CUSTOMER_VIEW);
    }

    /**
     * Create a <code>public.odata_customer_view</code> table reference
     */
    public OdataCustomerView() {
        this(DSL.name("odata_customer_view"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public OdataCustomerView as(String alias) {
        return new OdataCustomerView(DSL.name(alias), this);
    }

    @Override
    public OdataCustomerView as(Name alias) {
        return new OdataCustomerView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OdataCustomerView rename(String name) {
        return new OdataCustomerView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OdataCustomerView rename(Name name) {
        return new OdataCustomerView(name, null);
    }

    // -------------------------------------------------------------------------
    // Row17 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row17<String, String, LocalDateTime, Integer, String, Boolean, String, LocalDateTime, String, String, String, String, String, String, String, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }
}
