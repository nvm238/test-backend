/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables;


import com.innovattic.medicinfo.database.converter.JSONBConverter;
import com.innovattic.medicinfo.dbschema.Public;
import com.innovattic.medicinfo.dbschema.tables.records.UserAppSelfTestResultRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAppSelfTestResult extends TableImpl<UserAppSelfTestResultRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.user_app_self_test_result</code>
     */
    public static final UserAppSelfTestResult USER_APP_SELF_TEST_RESULT = new UserAppSelfTestResult();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserAppSelfTestResultRecord> getRecordType() {
        return UserAppSelfTestResultRecord.class;
    }

    /**
     * The column <code>public.user_app_self_test_result.id</code>.
     */
    public final TableField<UserAppSelfTestResultRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.user_app_self_test_result.label_id</code>.
     */
    public final TableField<UserAppSelfTestResultRecord, Integer> LABEL_ID = createField(DSL.name("label_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_app_self_test_result.customer_id</code>.
     */
    public final TableField<UserAppSelfTestResultRecord, Integer> CUSTOMER_ID = createField(DSL.name("customer_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_app_self_test_result.data</code>.
     */
    public final TableField<UserAppSelfTestResultRecord, String> DATA = createField(DSL.name("data"), SQLDataType.JSONB.nullable(false), this, "", new JSONBConverter());

    private UserAppSelfTestResult(Name alias, Table<UserAppSelfTestResultRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAppSelfTestResult(Name alias, Table<UserAppSelfTestResultRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.user_app_self_test_result</code> table reference
     */
    public UserAppSelfTestResult(String alias) {
        this(DSL.name(alias), USER_APP_SELF_TEST_RESULT);
    }

    /**
     * Create an aliased <code>public.user_app_self_test_result</code> table reference
     */
    public UserAppSelfTestResult(Name alias) {
        this(alias, USER_APP_SELF_TEST_RESULT);
    }

    /**
     * Create a <code>public.user_app_self_test_result</code> table reference
     */
    public UserAppSelfTestResult() {
        this(DSL.name("user_app_self_test_result"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<UserAppSelfTestResultRecord, Integer> getIdentity() {
        return (Identity<UserAppSelfTestResultRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<UserAppSelfTestResultRecord> getPrimaryKey() {
        return Internal.createUniqueKey(UserAppSelfTestResult.USER_APP_SELF_TEST_RESULT, DSL.name("user_app_self_test_result_pkey"), new TableField[] { UserAppSelfTestResult.USER_APP_SELF_TEST_RESULT.ID }, true);
    }

    @Override
    public List<UniqueKey<UserAppSelfTestResultRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAppSelfTestResultRecord>>asList(
              Internal.createUniqueKey(UserAppSelfTestResult.USER_APP_SELF_TEST_RESULT, DSL.name("user_app_self_test_result_pkey"), new TableField[] { UserAppSelfTestResult.USER_APP_SELF_TEST_RESULT.ID }, true)
        );
    }

    @Override
    public UserAppSelfTestResult as(String alias) {
        return new UserAppSelfTestResult(DSL.name(alias), this);
    }

    @Override
    public UserAppSelfTestResult as(Name alias) {
        return new UserAppSelfTestResult(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAppSelfTestResult rename(String name) {
        return new UserAppSelfTestResult(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserAppSelfTestResult rename(Name name) {
        return new UserAppSelfTestResult(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
