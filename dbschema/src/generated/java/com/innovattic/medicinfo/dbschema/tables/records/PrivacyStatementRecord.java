/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables.records;


import com.innovattic.medicinfo.dbschema.tables.PrivacyStatement;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrivacyStatementRecord extends UpdatableRecordImpl<PrivacyStatementRecord> implements Record4<Integer, LocalDateTime, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.privacy_statement.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.privacy_statement.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.privacy_statement.accepted_at</code>.
     */
    public void setAcceptedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.privacy_statement.accepted_at</code>.
     */
    public LocalDateTime getAcceptedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.privacy_statement.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.privacy_statement.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.privacy_statement.version</code>.
     */
    public void setVersion(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.privacy_statement.version</code>.
     */
    public String getVersion() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, LocalDateTime, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, LocalDateTime, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return PrivacyStatement.PRIVACY_STATEMENT.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PrivacyStatement.PRIVACY_STATEMENT.ACCEPTED_AT;
    }

    @Override
    public Field<Integer> field3() {
        return PrivacyStatement.PRIVACY_STATEMENT.USER_ID;
    }

    @Override
    public Field<String> field4() {
        return PrivacyStatement.PRIVACY_STATEMENT.VERSION;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getAcceptedAt();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public String component4() {
        return getVersion();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getAcceptedAt();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public String value4() {
        return getVersion();
    }

    @Override
    public PrivacyStatementRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public PrivacyStatementRecord value2(LocalDateTime value) {
        setAcceptedAt(value);
        return this;
    }

    @Override
    public PrivacyStatementRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public PrivacyStatementRecord value4(String value) {
        setVersion(value);
        return this;
    }

    @Override
    public PrivacyStatementRecord values(Integer value1, LocalDateTime value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrivacyStatementRecord
     */
    public PrivacyStatementRecord() {
        super(PrivacyStatement.PRIVACY_STATEMENT);
    }

    /**
     * Create a detached, initialised PrivacyStatementRecord
     */
    public PrivacyStatementRecord(Integer id, LocalDateTime acceptedAt, Integer userId, String version) {
        super(PrivacyStatement.PRIVACY_STATEMENT);

        setId(id);
        setAcceptedAt(acceptedAt);
        setUserId(userId);
        setVersion(version);
    }
}
