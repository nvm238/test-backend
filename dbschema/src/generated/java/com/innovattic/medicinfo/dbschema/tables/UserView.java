/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables;


import com.innovattic.medicinfo.database.dto.Gender;
import com.innovattic.medicinfo.database.dto.UserRole;
import com.innovattic.medicinfo.database.generator.GenderConverter;
import com.innovattic.medicinfo.database.generator.UserRoleConverter;
import com.innovattic.medicinfo.dbschema.Public;
import com.innovattic.medicinfo.dbschema.tables.records.UserViewRecord;

import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserView extends TableImpl<UserViewRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.user_view</code>
     */
    public static final UserView USER_VIEW = new UserView();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserViewRecord> getRecordType() {
        return UserViewRecord.class;
    }

    /**
     * The column <code>public.user_view.id</code>.
     */
    public final TableField<UserViewRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.user_view.public_id</code>.
     */
    public final TableField<UserViewRecord, UUID> PUBLIC_ID = createField(DSL.name("public_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.user_view.created</code>.
     */
    public final TableField<UserViewRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.user_view.label_id</code>.
     */
    public final TableField<UserViewRecord, Integer> LABEL_ID = createField(DSL.name("label_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.user_view.salesforce_id</code>.
     */
    public final TableField<UserViewRecord, String> SALESFORCE_ID = createField(DSL.name("salesforce_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.role</code>.
     */
    public final TableField<UserViewRecord, UserRole> ROLE = createField(DSL.name("role"), SQLDataType.CLOB, this, "", new UserRoleConverter());

    /**
     * The column <code>public.user_view.name</code>.
     */
    public final TableField<UserViewRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.gender</code>.
     */
    public final TableField<UserViewRecord, Gender> GENDER = createField(DSL.name("gender"), SQLDataType.CLOB, this, "", new GenderConverter());

    /**
     * The column <code>public.user_view.age</code>.
     */
    public final TableField<UserViewRecord, Integer> AGE = createField(DSL.name("age"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.user_view.email</code>.
     */
    public final TableField<UserViewRecord, String> EMAIL = createField(DSL.name("email"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.is_insured</code>.
     */
    public final TableField<UserViewRecord, Boolean> IS_INSURED = createField(DSL.name("is_insured"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>public.user_view.device_token</code>.
     */
    public final TableField<UserViewRecord, String> DEVICE_TOKEN = createField(DSL.name("device_token"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.sns_endpoint_arn</code>.
     */
    public final TableField<UserViewRecord, String> SNS_ENDPOINT_ARN = createField(DSL.name("sns_endpoint_arn"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.privacy_version</code>.
     */
    public final TableField<UserViewRecord, String> PRIVACY_VERSION = createField(DSL.name("privacy_version"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.privacy_version_accepted_at</code>.
     */
    public final TableField<UserViewRecord, LocalDateTime> PRIVACY_VERSION_ACCEPTED_AT = createField(DSL.name("privacy_version_accepted_at"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.user_view.birthdate</code>.
     */
    public final TableField<UserViewRecord, LocalDateTime> BIRTHDATE = createField(DSL.name("birthdate"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.user_view.migrated_from</code>.
     */
    public final TableField<UserViewRecord, String> MIGRATED_FROM = createField(DSL.name("migrated_from"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.label_public_id</code>.
     */
    public final TableField<UserViewRecord, UUID> LABEL_PUBLIC_ID = createField(DSL.name("label_public_id"), SQLDataType.UUID, this, "");

    /**
     * The column <code>public.user_view.phone_number</code>.
     */
    public final TableField<UserViewRecord, String> PHONE_NUMBER = createField(DSL.name("phone_number"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.postal_code</code>.
     */
    public final TableField<UserViewRecord, String> POSTAL_CODE = createField(DSL.name("postal_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.house_number</code>.
     */
    public final TableField<UserViewRecord, String> HOUSE_NUMBER = createField(DSL.name("house_number"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.entry_type</code>.
     */
    public final TableField<UserViewRecord, String> ENTRY_TYPE = createField(DSL.name("entry_type"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.general_practice</code>.
     */
    public final TableField<UserViewRecord, String> GENERAL_PRACTICE = createField(DSL.name("general_practice"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.general_practice_agb_code</code>.
     */
    public final TableField<UserViewRecord, String> GENERAL_PRACTICE_AGB_CODE = createField(DSL.name("general_practice_agb_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.general_practice_center</code>.
     */
    public final TableField<UserViewRecord, String> GENERAL_PRACTICE_CENTER = createField(DSL.name("general_practice_center"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.general_practice_center_agb_code</code>.
     */
    public final TableField<UserViewRecord, String> GENERAL_PRACTICE_CENTER_AGB_CODE = createField(DSL.name("general_practice_center_agb_code"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.holiday_destination</code>.
     */
    public final TableField<UserViewRecord, String> HOLIDAY_DESTINATION = createField(DSL.name("holiday_destination"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.shelter_location_id</code>.
     */
    public final TableField<UserViewRecord, String> SHELTER_LOCATION_ID = createField(DSL.name("shelter_location_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.shelter_location_name</code>.
     */
    public final TableField<UserViewRecord, String> SHELTER_LOCATION_NAME = createField(DSL.name("shelter_location_name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.user_view.onboarding_details_added</code>.
     */
    public final TableField<UserViewRecord, Boolean> ONBOARDING_DETAILS_ADDED = createField(DSL.name("onboarding_details_added"), SQLDataType.BOOLEAN, this, "");

    private UserView(Name alias, Table<UserViewRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserView(Name alias, Table<UserViewRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"user_view\" as  SELECT \"user\".id,\n    \"user\".public_id,\n    \"user\".created,\n    \"user\".label_id,\n    \"user\".salesforce_id,\n    \"user\".role,\n    \"user\".name,\n    \"user\".gender,\n    \"user\".age,\n    \"user\".email,\n    \"user\".is_insured,\n    \"user\".device_token,\n    \"user\".sns_endpoint_arn,\n    latest_acc_policy.version AS privacy_version,\n    latest_acc_policy.accepted_at AS privacy_version_accepted_at,\n    \"user\".birthdate,\n    \"user\".migrated_from,\n    label.public_id AS label_public_id,\n    \"user\".phone_number,\n    \"user\".postal_code,\n    \"user\".house_number,\n    \"user\".entry_type,\n    \"user\".general_practice,\n    \"user\".general_practice_agb_code,\n    \"user\".general_practice_center,\n    \"user\".general_practice_center_agb_code,\n    \"user\".holiday_destination,\n    \"user\".shelter_location_id,\n    \"user\".shelter_location_name,\n    \"user\".onboarding_details_added\n   FROM ((\"user\"\n     LEFT JOIN label ON ((\"user\".label_id = label.id)))\n     LEFT JOIN ( SELECT privacy_statement.user_id,\n            privacy_statement.version,\n            privacy_statement.accepted_at,\n            row_number() OVER (PARTITION BY privacy_statement.user_id ORDER BY privacy_statement.accepted_at DESC) AS rank\n           FROM privacy_statement) latest_acc_policy ON (((\"user\".id = latest_acc_policy.user_id) AND (latest_acc_policy.rank = 1))));"));
    }

    /**
     * Create an aliased <code>public.user_view</code> table reference
     */
    public UserView(String alias) {
        this(DSL.name(alias), USER_VIEW);
    }

    /**
     * Create an aliased <code>public.user_view</code> table reference
     */
    public UserView(Name alias) {
        this(alias, USER_VIEW);
    }

    /**
     * Create a <code>public.user_view</code> table reference
     */
    public UserView() {
        this(DSL.name("user_view"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UserView as(String alias) {
        return new UserView(DSL.name(alias), this);
    }

    @Override
    public UserView as(Name alias) {
        return new UserView(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserView rename(String name) {
        return new UserView(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserView rename(Name name) {
        return new UserView(name, null);
    }
}
