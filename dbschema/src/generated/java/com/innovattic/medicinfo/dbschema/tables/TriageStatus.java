/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables;


import com.innovattic.medicinfo.database.dto.TriageProgress;
import com.innovattic.medicinfo.database.generator.TriageStatusConverter;
import com.innovattic.medicinfo.dbschema.Public;
import com.innovattic.medicinfo.dbschema.tables.records.TriageStatusRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TriageStatus extends TableImpl<TriageStatusRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.triage_status</code>
     */
    public static final TriageStatus TRIAGE_STATUS = new TriageStatus();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TriageStatusRecord> getRecordType() {
        return TriageStatusRecord.class;
    }

    /**
     * The column <code>public.triage_status.id</code>.
     */
    public final TableField<TriageStatusRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.triage_status.created</code>.
     */
    public final TableField<TriageStatusRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.triage_status.ended</code>.
     */
    public final TableField<TriageStatusRecord, LocalDateTime> ENDED = createField(DSL.name("ended"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.triage_status.status</code>.
     */
    public final TableField<TriageStatusRecord, TriageProgress> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR.nullable(false), this, "", new TriageStatusConverter());

    /**
     * The column <code>public.triage_status.user_id</code>.
     */
    public final TableField<TriageStatusRecord, Integer> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.triage_status.conversation_id</code>.
     */
    public final TableField<TriageStatusRecord, Integer> CONVERSATION_ID = createField(DSL.name("conversation_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.triage_status.active</code>.
     */
    public final TableField<TriageStatusRecord, Boolean> ACTIVE = createField(DSL.name("active"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.field("true", SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.triage_status.schema_version</code>.
     */
    public final TableField<TriageStatusRecord, Integer> SCHEMA_VERSION = createField(DSL.name("schema_version"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.triage_status.stop_reason</code>.
     */
    public final TableField<TriageStatusRecord, String> STOP_REASON = createField(DSL.name("stop_reason"), SQLDataType.CLOB, this, "");

    private TriageStatus(Name alias, Table<TriageStatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private TriageStatus(Name alias, Table<TriageStatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.triage_status</code> table reference
     */
    public TriageStatus(String alias) {
        this(DSL.name(alias), TRIAGE_STATUS);
    }

    /**
     * Create an aliased <code>public.triage_status</code> table reference
     */
    public TriageStatus(Name alias) {
        this(alias, TRIAGE_STATUS);
    }

    /**
     * Create a <code>public.triage_status</code> table reference
     */
    public TriageStatus() {
        this(DSL.name("triage_status"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<TriageStatusRecord, Integer> getIdentity() {
        return (Identity<TriageStatusRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TriageStatusRecord> getPrimaryKey() {
        return Internal.createUniqueKey(TriageStatus.TRIAGE_STATUS, DSL.name("triage_status_pkey"), new TableField[] { TriageStatus.TRIAGE_STATUS.ID }, true);
    }

    @Override
    public List<UniqueKey<TriageStatusRecord>> getKeys() {
        return Arrays.<UniqueKey<TriageStatusRecord>>asList(
              Internal.createUniqueKey(TriageStatus.TRIAGE_STATUS, DSL.name("triage_status_pkey"), new TableField[] { TriageStatus.TRIAGE_STATUS.ID }, true)
        );
    }

    @Override
    public TriageStatus as(String alias) {
        return new TriageStatus(DSL.name(alias), this);
    }

    @Override
    public TriageStatus as(Name alias) {
        return new TriageStatus(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TriageStatus rename(String name) {
        return new TriageStatus(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TriageStatus rename(Name name) {
        return new TriageStatus(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, LocalDateTime, LocalDateTime, TriageProgress, Integer, Integer, Boolean, Integer, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
