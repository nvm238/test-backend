/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables;


import com.innovattic.medicinfo.database.dto.AppointmentType;
import com.innovattic.medicinfo.database.generator.AppointmentTypeConverter;
import com.innovattic.medicinfo.dbschema.Public;
import com.innovattic.medicinfo.dbschema.tables.records.CalendlyAppointmentRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row16;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CalendlyAppointment extends TableImpl<CalendlyAppointmentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.calendly_appointment</code>
     */
    public static final CalendlyAppointment CALENDLY_APPOINTMENT = new CalendlyAppointment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendlyAppointmentRecord> getRecordType() {
        return CalendlyAppointmentRecord.class;
    }

    /**
     * The column <code>public.calendly_appointment.id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.calendly_appointment.public_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, UUID> PUBLIC_ID = createField(DSL.name("public_id"), SQLDataType.UUID.nullable(false).defaultValue(DSL.field("uuid_generate_v4()", SQLDataType.UUID)), this, "");

    /**
     * The column <code>public.calendly_appointment.created</code>.
     */
    public final TableField<CalendlyAppointmentRecord, LocalDateTime> CREATED = createField(DSL.name("created"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.uri</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> URI = createField(DSL.name("uri"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.customer_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, Integer> CUSTOMER_ID = createField(DSL.name("customer_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.event_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> EVENT_ID = createField(DSL.name("event_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.invitee_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> INVITEE_ID = createField(DSL.name("invitee_id"), SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.start_time</code>.
     */
    public final TableField<CalendlyAppointmentRecord, LocalDateTime> START_TIME = createField(DSL.name("start_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.end_time</code>.
     */
    public final TableField<CalendlyAppointmentRecord, LocalDateTime> END_TIME = createField(DSL.name("end_time"), SQLDataType.LOCALDATETIME(6).nullable(false), this, "");

    /**
     * The column <code>public.calendly_appointment.cancel_reason</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> CANCEL_REASON = createField(DSL.name("cancel_reason"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.calendly_appointment.canceled_at</code>.
     */
    public final TableField<CalendlyAppointmentRecord, LocalDateTime> CANCELED_AT = createField(DSL.name("canceled_at"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>public.calendly_appointment.salesforce_appointment_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> SALESFORCE_APPOINTMENT_ID = createField(DSL.name("salesforce_appointment_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.calendly_appointment.salesforce_event_id</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> SALESFORCE_EVENT_ID = createField(DSL.name("salesforce_event_id"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.calendly_appointment.appointment_type</code>.
     */
    public final TableField<CalendlyAppointmentRecord, AppointmentType> APPOINTMENT_TYPE = createField(DSL.name("appointment_type"), SQLDataType.CLOB.nullable(false), this, "", new AppointmentTypeConverter());

    /**
     * The column <code>public.calendly_appointment.video_meeting_url</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> VIDEO_MEETING_URL = createField(DSL.name("video_meeting_url"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.calendly_appointment.request_fail_reason</code>.
     */
    public final TableField<CalendlyAppointmentRecord, String> REQUEST_FAIL_REASON = createField(DSL.name("request_fail_reason"), SQLDataType.CLOB, this, "");

    private CalendlyAppointment(Name alias, Table<CalendlyAppointmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private CalendlyAppointment(Name alias, Table<CalendlyAppointmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.calendly_appointment</code> table reference
     */
    public CalendlyAppointment(String alias) {
        this(DSL.name(alias), CALENDLY_APPOINTMENT);
    }

    /**
     * Create an aliased <code>public.calendly_appointment</code> table reference
     */
    public CalendlyAppointment(Name alias) {
        this(alias, CALENDLY_APPOINTMENT);
    }

    /**
     * Create a <code>public.calendly_appointment</code> table reference
     */
    public CalendlyAppointment() {
        this(DSL.name("calendly_appointment"), null);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<CalendlyAppointmentRecord, Integer> getIdentity() {
        return (Identity<CalendlyAppointmentRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<CalendlyAppointmentRecord> getPrimaryKey() {
        return Internal.createUniqueKey(CalendlyAppointment.CALENDLY_APPOINTMENT, DSL.name("calendly_appointment_pkey"), new TableField[] { CalendlyAppointment.CALENDLY_APPOINTMENT.ID }, true);
    }

    @Override
    public List<UniqueKey<CalendlyAppointmentRecord>> getKeys() {
        return Arrays.<UniqueKey<CalendlyAppointmentRecord>>asList(
              Internal.createUniqueKey(CalendlyAppointment.CALENDLY_APPOINTMENT, DSL.name("calendly_appointment_pkey"), new TableField[] { CalendlyAppointment.CALENDLY_APPOINTMENT.ID }, true)
        );
    }

    @Override
    public CalendlyAppointment as(String alias) {
        return new CalendlyAppointment(DSL.name(alias), this);
    }

    @Override
    public CalendlyAppointment as(Name alias) {
        return new CalendlyAppointment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendlyAppointment rename(String name) {
        return new CalendlyAppointment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CalendlyAppointment rename(Name name) {
        return new CalendlyAppointment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row16 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row16<Integer, UUID, LocalDateTime, String, Integer, String, String, LocalDateTime, LocalDateTime, String, LocalDateTime, String, String, AppointmentType, String, String> fieldsRow() {
        return (Row16) super.fieldsRow();
    }
}
