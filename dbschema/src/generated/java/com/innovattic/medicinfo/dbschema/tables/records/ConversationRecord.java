/*
 * This file is generated by jOOQ.
 */
package com.innovattic.medicinfo.dbschema.tables.records;


import com.innovattic.medicinfo.database.dto.ConversationStatus;
import com.innovattic.medicinfo.dbschema.tables.Conversation;

import java.time.LocalDateTime;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.14.16"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConversationRecord extends UpdatableRecordImpl<ConversationRecord> implements Record11<Integer, UUID, LocalDateTime, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, ConversationStatus, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.conversation.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.conversation.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.conversation.public_id</code>.
     */
    public void setPublicId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.conversation.public_id</code>.
     */
    public UUID getPublicId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.conversation.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.conversation.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.conversation.label_id</code>.
     */
    public void setLabelId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.conversation.label_id</code>.
     */
    public Integer getLabelId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.conversation.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.conversation.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.conversation.delivered_to_customer</code>.
     */
    public void setDeliveredToCustomer(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.conversation.delivered_to_customer</code>.
     */
    public LocalDateTime getDeliveredToCustomer() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.conversation.delivered_to_employee</code>.
     */
    public void setDeliveredToEmployee(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.conversation.delivered_to_employee</code>.
     */
    public LocalDateTime getDeliveredToEmployee() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.conversation.read_by_customer</code>.
     */
    public void setReadByCustomer(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.conversation.read_by_customer</code>.
     */
    public LocalDateTime getReadByCustomer() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.conversation.read_by_employee</code>.
     */
    public void setReadByEmployee(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.conversation.read_by_employee</code>.
     */
    public LocalDateTime getReadByEmployee() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>public.conversation.status</code>.
     */
    public void setStatus(ConversationStatus value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.conversation.status</code>.
     */
    public ConversationStatus getStatus() {
        return (ConversationStatus) get(9);
    }

    /**
     * Setter for <code>public.conversation.language</code>.
     */
    public void setLanguage(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.conversation.language</code>.
     */
    public String getLanguage() {
        return (String) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, UUID, LocalDateTime, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, ConversationStatus, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Integer, UUID, LocalDateTime, Integer, Integer, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime, ConversationStatus, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Conversation.CONVERSATION.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Conversation.CONVERSATION.PUBLIC_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Conversation.CONVERSATION.CREATED;
    }

    @Override
    public Field<Integer> field4() {
        return Conversation.CONVERSATION.LABEL_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Conversation.CONVERSATION.CUSTOMER_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Conversation.CONVERSATION.DELIVERED_TO_CUSTOMER;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Conversation.CONVERSATION.DELIVERED_TO_EMPLOYEE;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Conversation.CONVERSATION.READ_BY_CUSTOMER;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Conversation.CONVERSATION.READ_BY_EMPLOYEE;
    }

    @Override
    public Field<ConversationStatus> field10() {
        return Conversation.CONVERSATION.STATUS;
    }

    @Override
    public Field<String> field11() {
        return Conversation.CONVERSATION.LANGUAGE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getPublicId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreated();
    }

    @Override
    public Integer component4() {
        return getLabelId();
    }

    @Override
    public Integer component5() {
        return getCustomerId();
    }

    @Override
    public LocalDateTime component6() {
        return getDeliveredToCustomer();
    }

    @Override
    public LocalDateTime component7() {
        return getDeliveredToEmployee();
    }

    @Override
    public LocalDateTime component8() {
        return getReadByCustomer();
    }

    @Override
    public LocalDateTime component9() {
        return getReadByEmployee();
    }

    @Override
    public ConversationStatus component10() {
        return getStatus();
    }

    @Override
    public String component11() {
        return getLanguage();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getPublicId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreated();
    }

    @Override
    public Integer value4() {
        return getLabelId();
    }

    @Override
    public Integer value5() {
        return getCustomerId();
    }

    @Override
    public LocalDateTime value6() {
        return getDeliveredToCustomer();
    }

    @Override
    public LocalDateTime value7() {
        return getDeliveredToEmployee();
    }

    @Override
    public LocalDateTime value8() {
        return getReadByCustomer();
    }

    @Override
    public LocalDateTime value9() {
        return getReadByEmployee();
    }

    @Override
    public ConversationStatus value10() {
        return getStatus();
    }

    @Override
    public String value11() {
        return getLanguage();
    }

    @Override
    public ConversationRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConversationRecord value2(UUID value) {
        setPublicId(value);
        return this;
    }

    @Override
    public ConversationRecord value3(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public ConversationRecord value4(Integer value) {
        setLabelId(value);
        return this;
    }

    @Override
    public ConversationRecord value5(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public ConversationRecord value6(LocalDateTime value) {
        setDeliveredToCustomer(value);
        return this;
    }

    @Override
    public ConversationRecord value7(LocalDateTime value) {
        setDeliveredToEmployee(value);
        return this;
    }

    @Override
    public ConversationRecord value8(LocalDateTime value) {
        setReadByCustomer(value);
        return this;
    }

    @Override
    public ConversationRecord value9(LocalDateTime value) {
        setReadByEmployee(value);
        return this;
    }

    @Override
    public ConversationRecord value10(ConversationStatus value) {
        setStatus(value);
        return this;
    }

    @Override
    public ConversationRecord value11(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public ConversationRecord values(Integer value1, UUID value2, LocalDateTime value3, Integer value4, Integer value5, LocalDateTime value6, LocalDateTime value7, LocalDateTime value8, LocalDateTime value9, ConversationStatus value10, String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConversationRecord
     */
    public ConversationRecord() {
        super(Conversation.CONVERSATION);
    }

    /**
     * Create a detached, initialised ConversationRecord
     */
    public ConversationRecord(Integer id, UUID publicId, LocalDateTime created, Integer labelId, Integer customerId, LocalDateTime deliveredToCustomer, LocalDateTime deliveredToEmployee, LocalDateTime readByCustomer, LocalDateTime readByEmployee, ConversationStatus status, String language) {
        super(Conversation.CONVERSATION);

        setId(id);
        setPublicId(publicId);
        setCreated(created);
        setLabelId(labelId);
        setCustomerId(customerId);
        setDeliveredToCustomer(deliveredToCustomer);
        setDeliveredToEmployee(deliveredToEmployee);
        setReadByCustomer(readByCustomer);
        setReadByEmployee(readByEmployee);
        setStatus(status);
        setLanguage(language);
    }
}
