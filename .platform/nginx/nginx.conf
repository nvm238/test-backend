#Elastic Beanstalk Nginx Configuration File
#We choose to override that file because there is no way to override directive that is already on
#the lowest level(in server block) and this is the case for us, as default nginx.conf contains all directives we want to change.
#The only way to do that in our case is to override whole file. Amazon documentation just mentions extending the configuration
#and overriding whole files not single directives. If we just add existing directive in extension file, nginx will
#complain about having duplicates.

user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    32792;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    include       conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default     "upgrade";
    }

    server {
        listen        80 default_server;
        access_log    /var/log/nginx/access.log main;

        client_header_timeout 75; # INNOVATTIC: changing timeouts because of MEDSLA-111
        client_body_timeout   75; # INNOVATTIC: changing timeouts because of MEDSLA-111
        keepalive_timeout     75; # INNOVATTIC: changing timeouts because of MEDSLA-111
        gzip                  off;
        gzip_comp_level       4;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

        # Include the Elastic Beanstalk generated locations
        include conf.d/elasticbeanstalk/*.conf;
    }
}